{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": []
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "LpxFyIC9MVk3",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "5afdfcd7-e588-4000-ddda-9de4cf4f01b4"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "\n",
            "--- Happiness Quotes App ---\n",
            "1. Add a Happiness Quote\n",
            "2. Display Happiness Quote\n",
            "3. Exit\n",
            "Enter your choice (1/2/3): 1\n",
            "Enter you name: William Carrera\n",
            "Write a positive quotes: The most important thing is to enjoy your life \n",
            "Quote added successfully!\n",
            "\n",
            "--- Happiness Quotes App ---\n",
            "1. Add a Happiness Quote\n",
            "2. Display Happiness Quote\n",
            "3. Exit\n",
            "Enter your choice (1/2/3): 2\n",
            "\n",
            "Quotes for William Carrera:\n",
            "1. The most important thing is to enjoy your life \n",
            "\n",
            "--- Happiness Quotes App ---\n",
            "1. Add a Happiness Quote\n",
            "2. Display Happiness Quote\n",
            "3. Exit\n",
            "Enter your choice (1/2/3): 3\n",
            "Exiting Happiness Quotes App. Have a joyful day!\n"
          ]
        }
      ],
      "source": [
        "class HappinessQuotes:\n",
        "    def __init__(self):\n",
        "        self.quotes = {}\n",
        "\n",
        "    def add_quote(self, name, quote):\n",
        "        if name in self.quotes:\n",
        "            self.quotes[name].append(quote)\n",
        "        else:\n",
        "            self.quotes[name] = [quote]\n",
        "\n",
        "    def display_quotes(self):\n",
        "        for name, quotes in self.quotes.items():\n",
        "            print(f\"\\nQuotes for {name}:\")\n",
        "            for i, quote in enumerate(quotes, 1):\n",
        "                print(f\"{i}. {quote}\")\n",
        "\n",
        "    def main_menu(self):\n",
        "        while True:\n",
        "            print(\"\\n--- Happiness Quotes App ---\")\n",
        "            print(\"1. Add a Happiness Quote\")\n",
        "            print(\"2. Display Happiness Quote\")\n",
        "            print(\"3. Exit\")\n",
        "\n",
        "            choice = input(\"Enter your choice (1/2/3): \")\n",
        "\n",
        "            if choice == '1':\n",
        "                name = input(\"Enter you name: \")\n",
        "                quote = input(\"Write a positive quotes: \")\n",
        "                self.add_quote(name, quote)\n",
        "                print(\"Quote added successfully!\")\n",
        "\n",
        "            elif choice == '2':\n",
        "                self.display_quotes()\n",
        "\n",
        "            elif choice == '3':\n",
        "                print(\"Exiting Happiness Quotes App. Have a joyful day!\")\n",
        "                break\n",
        "\n",
        "            else:\n",
        "                print(\"Invalid choice. Please enter 1, 2, or 3.\")\n",
        "\n",
        "if __name__ == \"__main__\":\n",
        "    happiness_quotes_app = HappinessQuotes()\n",
        "    happiness_quotes_app.main_menu()\n"
      ]
    }
  ]
}
